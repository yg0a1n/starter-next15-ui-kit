---
description: APPLY Clean Architecture principles WHEN organizing code in backend
globs: apps/backend/**, src/**/*.php
alwaysApply: false
---

Layer Structure:
- Separate code by layer: Domain, Application, Infrastructure, Presentation
- Direct dependencies inward only
- Keep domain layer framework-agnostic
- Define interfaces at layer boundaries

Domain Layer:
- Place business logic and entities here
- Use pure, framework-free models
- Define domain services for complex logic
- Declare repository interfaces only

Application Layer:
- Implement use cases as orchestrators
- Keep services single-responsibility
- Use DTOs for all data transfer
- Validate input at boundaries

Infrastructure Layer:
- Implement domain repository interfaces
- Isolate external systems (DB, APIs, files)
- Keep infrastructure out of business logic

Presentation Layer:
- Handle API requests and responses
- Use controllers for HTTP logic
- Centralize error handling and validation
- Format all responses consistently
