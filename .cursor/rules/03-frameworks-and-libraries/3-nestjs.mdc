---
description: APPLY NestJS framework standards WHEN developing with NestJS
globs: apps/backend/src/**/*.ts
alwaysApply: false
---

Architecture:
- Use modular structure

Modules:
- Import new files in parent module

Classes:
- Use DI for external interactions
- Use plain class for utilities

Controllers:
- Only handle HTTP layer
- Use DTOs for input/output
- Call use-cases, not repositories

Domain Objects:
- Validate with class-validator

Domain Services:
- Encapsulate domain logic
- No DB access

Use Cases:
- Use commands/queries for DB
- Never call DB directly

Repositories:
- Implement domain interface
- Export const KEY
- Type with model property
- Return domain objects only
- Keep Prisma types internal

Mappers:
- Use DI for mappers
- Map all properties
- Return validated instances

Testing:
- Use Jest
- Import all modules
- No DB mock for integration

Seed:
- Use Prisma types
- Assume empty DB
- Inject as service
